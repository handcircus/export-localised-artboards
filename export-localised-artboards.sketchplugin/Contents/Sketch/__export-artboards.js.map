{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/export-artboards.js","webpack://exports/external \"sketch\""],"names":["readFile","path","NSString","stringWithContentsOfFile_encoding_error","NSUTF8StringEncoding","ExportLocalisedArtboards","document","sketch","getSelectedDocument","page","selectedPage","layers","selectedLayers","documentPath","substring","lastIndexOf","csvPath","csvContent","UI","alert","console","log","csvLines","split","languageColumns","localisationData","column","length","languageData","language","keys","push","row","localisationEntryColumns","entryKey","localisationEntry","outputLanguageString","forEach","testLayer","type","ExportArtboard","artBoard","exportPath","name","originalArtboardName","replace","replacedOverrides","replacedTextLayers","artboardLayers","artboardLayer","layerName","hasOwnProperty","replacementValue","overrides","override","property","text","value","text_layer","export","formats","output","replacedOverrideData","replacedTextLayerData"],"mappings":"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","file":"__export-artboards.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/export-artboards.js\");\n","import sketch from 'sketch'\n// documentation: https://developer.sketchapp.com/reference/api/\n\n// From https://github.com/turbobabr/Sketch-Plugins-Cookbook\nfunction readFile(path) {\n  return NSString.stringWithContentsOfFile_encoding_error(path, NSUTF8StringEncoding, null);\n}\n\nexport default function() {  \n  ExportLocalisedArtboards();\n}\n\nexport function ExportLocalisedArtboards() {\n  // Load the doc with all localised items\n  \n  const document = sketch.getSelectedDocument();\n  var page = document.selectedPage;\n  var layers = document.selectedLayers.layers;\n\n  // Get folder\n  var documentPath=document.path.substring(0,document.path.lastIndexOf(\"/\")+1);\n\n  // Load CSV with language data. This should be in the format:\n  // First column contains keys to search for, first row containand language IDs\n  // eg:\n  //              |  en-US | de-DE\n  // screenshot_1 | Hat    | German Hat\n  // screenshot_2 | Dog    | German Dog\n\n  var csvPath=documentPath+\"LanguageData.csv\";\n  var csvContent = readFile(csvPath);\n  if (csvContent==null) {\n    sketch.UI.alert('Missing Localisation Data', 'Please place a CSV file named LanguageData.csv in the same folder as your sketch file')   \n    return;\n  }\n  console.log(\"Output Content : \\n\"+ csvContent);\n\n  // Split lines\n  var csvLines=csvContent.split(/\\r?\\n/);\n  var languageColumns=csvLines[0].split(',');\n\n  // Create language data for each supported language\n  var localisationData=[];\n  for (var column=1;column<languageColumns.length;column++) {\n    var languageData= {language:languageColumns[column],keys:{}};\n    languageData.keys={};\n    localisationData.push(languageData);\n    //log(\"Added language \"+languageData.language);    \n  }\n\n  // Process each row and add to each relevant language\n  for (var row=1;row<csvLines.length;row++) {\n    var localisationEntryColumns=csvLines[row].split(',');    \n    var entryKey=localisationEntryColumns[0]; // First column is the \"key\"\n    for (var column=1;column<localisationEntryColumns.length;column++) {\n      var localisationEntry=localisationEntryColumns[column];\n      var languageData=localisationData[column-1];     \n      if (languageData) {\n        //log(\"\\tAdded Key \"+entryKey+\" : '\"+localisationEntry+\"' to language \"+languageData.language);\n        languageData.keys[entryKey]=localisationEntry;\n      }\n      \n    }\n  }\n     \n  var outputLanguageString=\"\";\n  // For each language\n  localisationData.forEach(languageData =>{\n    outputLanguageString+=languageData.language+\" \";\n    // Process\n    page.layers.forEach(testLayer => {\n        //log(\"TestLayer found type \"+testLayer.type+\" name \"+testLayer.name);\n        if (testLayer.type ==  'Artboard') {\n          //textLayer.selected = true;         \n          ExportArtboard(testLayer,languageData,documentPath)\n        }\n    });\n  });\n\n  sketch.UI.alert('Localised Artboard Export Complete','Languages processed: '+outputLanguageString);\n}\n\nfunction ExportArtboard(artBoard,languageData,exportPath) {\n  log(\"Exporting artboard \"+artBoard.name+\" for language \"+languageData.language);\n\n  // Substitude \"language\"\n  let originalArtboardName=artBoard.name;\n  artBoard.name=originalArtboardName.replace(\"[LANGUAGE]\",languageData.language);\n\n  var replacedOverrides=[];\n  var replacedTextLayers=[];\n  \n  // Search for textfields to replace\n  var artboardLayers=artBoard.layers;\n  artboardLayers.forEach(artboardLayer => {\n    let layerName=artboardLayer.name;\n    //log(\"\\tLayer on artboard found type \"+artboardLayer.type+\" name '\"+artboardLayer.name+\"'\");\n    if (languageData.keys.hasOwnProperty(layerName)) {\n      let replacementValue=languageData.keys[layerName];\n      //log(\"\\t\\tFound replacement value \"+replacementValue+\" for layer \"+layerName);\n      if (artboardLayer.type=='SymbolInstance') {\n        var overrides=artboardLayer.overrides;\n        overrides.forEach(override => {\n          if (override.property==\"stringValue\") {\n            //log (\"\\t\\t\\tFound layer override \");\n            replacedOverrides.push({override:override,text:override.value});\n            override.value=replacementValue;            \n          }\n        });\n      }\n      if (artboardLayer.type=='Text') {\n        replacedTextLayers.push({text_layer:artboardLayer,text:artboardLayer.text});\n        artboardLayer.text=replacementValue;\n      }\n    }\n  });\n\n  log(\"exportPath is \"+exportPath);\n\n  sketch.export(artBoard, {\n    formats: 'png',\n    output:exportPath\n  })\n\n  // Restore override values\n  replacedOverrides.forEach(replacedOverrideData => {\n    replacedOverrideData.override.value=replacedOverrideData.text;\n  });\n  \n  // Restore text values\n  replacedTextLayers.forEach(replacedTextLayerData => {\n    replacedTextLayerData.text_layer.text=replacedTextLayerData.text;\n  });\n\n  artBoard.name=originalArtboardName;\n\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}